// ----------------------------------------------------------------------
//  HLS HDL:        Verilog Netlister
//  HLS Version:    2011a.126 Production Release
//  HLS Date:       Wed Aug  8 00:52:07 PDT 2012
// 
//  Generated by:   nn1114@EEWS304-032
//  Generated date: Wed May 13 20:16:32 2015
// ----------------------------------------------------------------------

// 
// ------------------------------------------------------------------
//  Design Unit:    reduce_by_5_core
// ------------------------------------------------------------------


module reduce_by_5_core (
  clk, en, arst_n, vin_rsc_mgc_in_wire_d, clk_reg_rsc_mgc_out_stdreg_d, vout_rsc_mgc_out_stdreg_d
);
  input clk;
  input en;
  input arst_n;
  input [149:0] vin_rsc_mgc_in_wire_d;
  output clk_reg_rsc_mgc_out_stdreg_d;
  reg clk_reg_rsc_mgc_out_stdreg_d;
  output vout_rsc_mgc_out_stdreg_d;
  reg vout_rsc_mgc_out_stdreg_d;



  // Interconnect Declarations for Component Instantiations 
  always @(*)
  begin : core
    // Interconnect Declarations
    reg [4:0] count_sva;
    reg out_sva;
    reg [18:0] FRAME_p_1_sva;
    reg [24:0] ACC1_1_if_mul_cse_sva;
    reg [8:0] acc_imod_sva;
    reg [6:0] acc_imod_2_sva;
    reg [29:0] ACC1_if_slc_svs;
    reg [4:0] count_sva_1;
    reg [4:0] count_sva_dfm;
    reg [24:0] ACC1_2_if_acc_2_idiv_sva;
    reg [8:0] acc_imod_3_sva;
    reg [6:0] acc_imod_4_sva;
    reg [29:0] ACC1_if_slc_1_svs;
    reg [4:0] count_sva_2;
    reg [4:0] count_sva_dfm_1;
    reg [23:0] ACC1_3_if_conc_idiv_sg1_sva;
    reg [8:0] acc_imod_5_sva;
    reg [6:0] acc_imod_6_sva;
    reg [29:0] ACC1_if_slc_2_svs;
    reg [4:0] count_sva_3;
    reg [4:0] count_sva_dfm_2;
    reg [24:0] ACC1_4_if_acc_2_idiv_sva;
    reg [8:0] acc_imod_7_sva;
    reg [6:0] acc_imod_8_sva;
    reg [29:0] ACC1_if_slc_3_svs;
    reg [4:0] count_sva_4;
    reg [4:0] count_sva_dfm_3;
    reg [22:0] ACC1_5_if_conc_idiv_sg1_sva;
    reg [8:0] acc_imod_9_sva;
    reg [6:0] acc_imod_10_sva;
    reg [29:0] ACC1_if_slc_4_svs;
    reg [4:0] count_sva_5;
    reg [4:0] count_sva_dfm_4;
    reg [6:0] acc_psp_sva;
    reg [5:0] acc_imod_1_sva;
    reg [5:0] FRAME_acc_2_psp_sva;
    reg out_sva_1;
    reg unequal_tmp_5;
    reg out_sva_dfm;
    reg FRAME_land_sva_1;
    reg [18:0] FRAME_p_1_sva_1;
    reg [149:0] ACC1_if_io_read_vin_rsc_d_ftmp;
    reg [149:0] ACC1_if_io_read_vin_rsc_d_1_ftmp;
    reg [149:0] ACC1_if_io_read_vin_rsc_d_2_ftmp;
    reg [149:0] ACC1_if_io_read_vin_rsc_d_3_ftmp;
    reg [149:0] ACC1_if_io_read_vin_rsc_d_4_ftmp;
    reg [8:0] ACC1_if_acc_itm;
    reg [6:0] ACC1_if_mul_3_itm;
    reg [6:0] ACC1_if_acc_23_itm;
    reg [8:0] ACC1_if_acc_32_itm;
    reg [6:0] ACC1_if_mul_9_itm;
    reg [6:0] ACC1_if_acc_34_itm;
    reg [8:0] ACC1_if_acc_43_itm;
    reg [6:0] ACC1_if_mul_15_itm;
    reg [6:0] ACC1_if_acc_45_itm;
    reg [8:0] ACC1_if_acc_54_itm;
    reg [6:0] ACC1_if_mul_21_itm;
    reg [6:0] ACC1_if_acc_56_itm;
    reg [8:0] ACC1_if_acc_65_itm;
    reg [6:0] ACC1_if_mul_28_itm;
    reg [6:0] ACC1_if_acc_67_itm;
    reg FRAME_if_1_and_itm;
    reg FRAME_slc_itm;
    reg [4:0] FRAME_and_itm;
    reg [3:0] FRAME_if_acc_11_sdt;
    reg [6:0] ACC1_if_acc_60_psp;
    reg [6:0] ACC1_if_acc_16_psp;
    reg [6:0] ACC1_if_acc_27_psp;
    reg [6:0] ACC1_if_acc_38_psp;
    reg [6:0] ACC1_if_acc_49_psp;

    begin : mainExit
      forever begin : main
        // C-Step 0 of Loop 'main'
        count_sva = 5'b0;
        out_sva = 1'b0;
        FRAME_p_1_sva = 19'b0;
        begin : waitLoop0Exit
          forever begin : waitLoop0
            @(posedge clk or negedge ( arst_n ));
            if ( ~ arst_n )
              disable mainExit;
            if ( en )
              disable waitLoop0Exit;
          end
        end
        // C-Step 1 of Loop 'main'
        begin : FRAMEExit
          forever begin : FRAME
            // C-Step 0 of Loop 'FRAME'
            begin : waitLoop1Exit
              forever begin : waitLoop1
                @(posedge clk or negedge ( arst_n ));
                if ( ~ arst_n )
                  disable mainExit;
                if ( en )
                  disable waitLoop1Exit;
              end
            end
            // C-Step 1 of Loop 'FRAME'
            FRAME_land_sva_1 = 1'b0;
            ACC1_1_if_mul_cse_sva = conv_u2u_50_25(conv_u2u_19_25(FRAME_p_1_sva)
                * 25'b1001011);
            ACC1_if_acc_itm = conv_u2s_8_9(conv_u2u_7_8(conv_u2u_6_7({(~ (ACC1_1_if_mul_cse_sva[17:15]))
                , 2'b11 , (~ (ACC1_1_if_mul_cse_sva[8]))}) + conv_u2u_6_7({(ACC1_1_if_mul_cse_sva[14:13])
                , 1'b0 , (ACC1_1_if_mul_cse_sva[17:15])})) + conv_u2u_7_8(conv_u2u_6_7({(ACC1_1_if_mul_cse_sva[8])
                , (ACC1_1_if_mul_cse_sva[24:20])}) + conv_u2u_5_7({(ACC1_1_if_mul_cse_sva[18])
                , 1'b0 , (readslicef_4_3_1((conv_u2u_3_4(signext_3_2({(ACC1_1_if_mul_cse_sva[18])
                , 1'b1})) + conv_u2u_3_4({(ACC1_1_if_mul_cse_sva[14:13]) , 1'b1}))))})))
                + conv_s2s_8_9({(conv_s2u_1_2(ACC1_1_if_mul_cse_sva[19]) + 2'b11)
                , (conv_u2u_5_6({(ACC1_1_if_mul_cse_sva[11]) , 1'b0 , (signext_3_1(ACC1_1_if_mul_cse_sva[11]))})
                + conv_u2u_5_6(signext_5_4({(ACC1_1_if_mul_cse_sva[19]) , 1'b0 ,
                (signext_2_1(ACC1_1_if_mul_cse_sva[19]))})))});
            ACC1_if_acc_16_psp = conv_s2s_6_7({(ACC1_1_if_mul_cse_sva[12]) , 3'b0
                , (signext_2_1(ACC1_1_if_mul_cse_sva[12]))}) + conv_u2s_6_7(ACC1_1_if_mul_cse_sva[5:0]);
            ACC1_if_io_read_vin_rsc_d_ftmp = vin_rsc_mgc_in_wire_d;
            ACC1_2_if_acc_2_idiv_sva = ACC1_1_if_mul_cse_sva + 25'b1111;
            ACC1_if_acc_32_itm = conv_u2s_8_9(conv_u2u_7_8(conv_u2u_6_7({(~ (ACC1_2_if_acc_2_idiv_sva[17:15]))
                , 2'b11 , (~ (ACC1_2_if_acc_2_idiv_sva[8]))}) + conv_u2u_6_7({(ACC1_2_if_acc_2_idiv_sva[14:13])
                , 1'b0 , (ACC1_2_if_acc_2_idiv_sva[17:15])})) + conv_u2u_7_8(conv_u2u_6_7({(ACC1_2_if_acc_2_idiv_sva[8])
                , (ACC1_2_if_acc_2_idiv_sva[24:20])}) + conv_u2u_5_7({(ACC1_2_if_acc_2_idiv_sva[18])
                , 1'b0 , (readslicef_4_3_1((conv_u2u_3_4(signext_3_2({(ACC1_2_if_acc_2_idiv_sva[18])
                , 1'b1})) + conv_u2u_3_4({(ACC1_2_if_acc_2_idiv_sva[14:13]) , 1'b1}))))})))
                + conv_s2s_8_9({(conv_s2u_1_2(ACC1_2_if_acc_2_idiv_sva[19]) + 2'b11)
                , (conv_u2u_5_6({(ACC1_2_if_acc_2_idiv_sva[11]) , 1'b0 , (signext_3_1(ACC1_2_if_acc_2_idiv_sva[11]))})
                + conv_u2u_5_6(signext_5_4({(ACC1_2_if_acc_2_idiv_sva[19]) , 1'b0
                , (signext_2_1(ACC1_2_if_acc_2_idiv_sva[19]))})))});
            ACC1_if_acc_27_psp = conv_s2s_6_7({(ACC1_2_if_acc_2_idiv_sva[12]) , 3'b0
                , (signext_2_1(ACC1_2_if_acc_2_idiv_sva[12]))}) + conv_u2s_6_7(ACC1_2_if_acc_2_idiv_sva[5:0]);
            ACC1_3_if_conc_idiv_sg1_sva = (ACC1_1_if_mul_cse_sva[24:1]) + 24'b1111;
            ACC1_if_acc_43_itm = conv_u2s_8_9(conv_u2u_7_8(conv_u2u_6_7({(~ (ACC1_3_if_conc_idiv_sg1_sva[16:14]))
                , 2'b11 , (~ (ACC1_3_if_conc_idiv_sg1_sva[7]))}) + conv_u2u_6_7({(ACC1_3_if_conc_idiv_sg1_sva[13:12])
                , 1'b0 , (ACC1_3_if_conc_idiv_sg1_sva[16:14])})) + conv_u2u_7_8(conv_u2u_6_7({(ACC1_3_if_conc_idiv_sg1_sva[7])
                , (ACC1_3_if_conc_idiv_sg1_sva[23:19])}) + conv_u2u_5_7({(ACC1_3_if_conc_idiv_sg1_sva[17])
                , 1'b0 , (readslicef_4_3_1((conv_u2u_3_4(signext_3_2({(ACC1_3_if_conc_idiv_sg1_sva[17])
                , 1'b1})) + conv_u2u_3_4({(ACC1_3_if_conc_idiv_sg1_sva[13:12]) ,
                1'b1}))))}))) + conv_s2s_8_9({(conv_s2u_1_2(ACC1_3_if_conc_idiv_sg1_sva[18])
                + 2'b11) , (conv_u2u_5_6({(ACC1_3_if_conc_idiv_sg1_sva[10]) , 1'b0
                , (signext_3_1(ACC1_3_if_conc_idiv_sg1_sva[10]))}) + conv_u2u_5_6(signext_5_4({(ACC1_3_if_conc_idiv_sg1_sva[18])
                , 1'b0 , (signext_2_1(ACC1_3_if_conc_idiv_sg1_sva[18]))})))});
            ACC1_if_acc_38_psp = conv_s2s_6_7({(ACC1_3_if_conc_idiv_sg1_sva[11])
                , 3'b0 , (signext_2_1(ACC1_3_if_conc_idiv_sg1_sva[11]))}) + conv_u2s_6_7({(ACC1_3_if_conc_idiv_sg1_sva[4:0])
                , (ACC1_1_if_mul_cse_sva[0])});
            ACC1_4_if_acc_2_idiv_sva = ACC1_1_if_mul_cse_sva + 25'b101101;
            ACC1_if_acc_54_itm = conv_u2s_8_9(conv_u2u_7_8(conv_u2u_6_7({(~ (ACC1_4_if_acc_2_idiv_sva[17:15]))
                , 2'b11 , (~ (ACC1_4_if_acc_2_idiv_sva[8]))}) + conv_u2u_6_7({(ACC1_4_if_acc_2_idiv_sva[14:13])
                , 1'b0 , (ACC1_4_if_acc_2_idiv_sva[17:15])})) + conv_u2u_7_8(conv_u2u_6_7({(ACC1_4_if_acc_2_idiv_sva[8])
                , (ACC1_4_if_acc_2_idiv_sva[24:20])}) + conv_u2u_5_7({(ACC1_4_if_acc_2_idiv_sva[18])
                , 1'b0 , (readslicef_4_3_1((conv_u2u_3_4(signext_3_2({(ACC1_4_if_acc_2_idiv_sva[18])
                , 1'b1})) + conv_u2u_3_4({(ACC1_4_if_acc_2_idiv_sva[14:13]) , 1'b1}))))})))
                + conv_s2s_8_9({(conv_s2u_1_2(ACC1_4_if_acc_2_idiv_sva[19]) + 2'b11)
                , (conv_u2u_5_6({(ACC1_4_if_acc_2_idiv_sva[11]) , 1'b0 , (signext_3_1(ACC1_4_if_acc_2_idiv_sva[11]))})
                + conv_u2u_5_6(signext_5_4({(ACC1_4_if_acc_2_idiv_sva[19]) , 1'b0
                , (signext_2_1(ACC1_4_if_acc_2_idiv_sva[19]))})))});
            ACC1_if_acc_49_psp = conv_s2s_6_7({(ACC1_4_if_acc_2_idiv_sva[12]) , 3'b0
                , (signext_2_1(ACC1_4_if_acc_2_idiv_sva[12]))}) + conv_u2s_6_7(ACC1_4_if_acc_2_idiv_sva[5:0]);
            ACC1_5_if_conc_idiv_sg1_sva = (ACC1_1_if_mul_cse_sva[24:2]) + 23'b1111;
            ACC1_if_acc_65_itm = conv_u2s_8_9(conv_u2u_7_8(conv_u2u_6_7({(~ (ACC1_5_if_conc_idiv_sg1_sva[15:13]))
                , 2'b11 , (~ (ACC1_5_if_conc_idiv_sg1_sva[6]))}) + conv_u2u_6_7({(ACC1_5_if_conc_idiv_sg1_sva[12:11])
                , 1'b0 , (ACC1_5_if_conc_idiv_sg1_sva[15:13])})) + conv_u2u_7_8(conv_u2u_6_7({(ACC1_5_if_conc_idiv_sg1_sva[6])
                , (ACC1_5_if_conc_idiv_sg1_sva[22:18])}) + conv_u2u_5_7({(ACC1_5_if_conc_idiv_sg1_sva[16])
                , 1'b0 , (readslicef_4_3_1((conv_u2u_3_4(signext_3_2({(ACC1_5_if_conc_idiv_sg1_sva[16])
                , 1'b1})) + conv_u2u_3_4({(ACC1_5_if_conc_idiv_sg1_sva[12:11]) ,
                1'b1}))))}))) + conv_s2s_8_9({(conv_s2u_1_2(ACC1_5_if_conc_idiv_sg1_sva[17])
                + 2'b11) , (conv_u2u_5_6({(ACC1_5_if_conc_idiv_sg1_sva[9]) , 1'b0
                , (signext_3_1(ACC1_5_if_conc_idiv_sg1_sva[9]))}) + conv_u2u_5_6(signext_5_4({(ACC1_5_if_conc_idiv_sg1_sva[17])
                , 1'b0 , (signext_2_1(ACC1_5_if_conc_idiv_sg1_sva[17]))})))});
            ACC1_if_mul_28_itm = conv_s2u_14_7(conv_u2s_2_7(ACC1_5_if_conc_idiv_sg1_sva[8:7])
                * 7'b1110011);
            ACC1_if_acc_60_psp = conv_s2s_6_7({(ACC1_5_if_conc_idiv_sg1_sva[10])
                , 3'b0 , (signext_2_1(ACC1_5_if_conc_idiv_sg1_sva[10]))}) + conv_u2s_6_7({(ACC1_5_if_conc_idiv_sg1_sva[3:0])
                , (ACC1_1_if_mul_cse_sva[1:0])});
            acc_psp_sva = ((conv_u2s_5_7(conv_u2u_4_5({(FRAME_p_1_sva[14]) , 1'b0
                , (FRAME_p_1_sva[18:17])}) + conv_u2u_4_5({(~ (FRAME_p_1_sva[15]))
                , 2'b11 , (~ (FRAME_p_1_sva[5]))})) + conv_s2s_5_7(conv_s2s_10_5(conv_s2s_2_5(conv_s2s_1_2(FRAME_p_1_sva[16])
                + conv_u2s_1_2(FRAME_p_1_sva[6])) * 5'b10101))) + conv_u2u_6_7({5'b11010
                , (FRAME_p_1_sva[15])})) + (conv_u2u_6_7(conv_u2u_5_6(conv_u2u_4_5(~
                (FRAME_p_1_sva[13:10])) + conv_u2u_4_5({(FRAME_p_1_sva[9:7]) , (FRAME_p_1_sva[14])}))
                + conv_u2u_5_6(conv_u2u_4_5({(~ (FRAME_p_1_sva[4])) , 2'b11 , (~
                (FRAME_p_1_sva[4]))}) + conv_u2u_4_5({(FRAME_p_1_sva[5]) , (FRAME_p_1_sva[9:7])})))
                + conv_u2u_6_7(conv_u2u_5_6({1'b1 , (~ (FRAME_p_1_sva[18:17])) ,
                2'b11}) + conv_u2u_4_6(FRAME_p_1_sva[3:0])));
            FRAME_if_acc_11_sdt = ({(~ (acc_psp_sva[4])) , 2'b11 , (~ (acc_psp_sva[4]))})
                + conv_s2u_2_4(~ (acc_psp_sva[6:5]));
            acc_imod_1_sva = ({(conv_s2u_4_5({(acc_psp_sva[6:5]) , 2'b1}) + conv_u2u_3_5(FRAME_if_acc_11_sdt[3:1]))
                , (FRAME_if_acc_11_sdt[0])}) + conv_s2s_5_6({1'b1 , (acc_psp_sva[3:0])});
            FRAME_acc_2_psp_sva = conv_u2s_5_6(signext_5_4({(acc_imod_1_sva[5]) ,
                2'b0 , (acc_imod_1_sva[5])})) + acc_imod_1_sva;
            unequal_tmp_5 = ~((FRAME_acc_2_psp_sva[4]) & (FRAME_acc_2_psp_sva[3])
                & (~((FRAME_acc_2_psp_sva[5]) | (FRAME_acc_2_psp_sva[2]) | (FRAME_acc_2_psp_sva[1])
                | (FRAME_acc_2_psp_sva[0]))));
            case (FRAME_acc_2_psp_sva)
              6'b0 : begin
                FRAME_land_sva_1 = readslicef_20_1_19((({1'b1 , (~ FRAME_p_1_sva)})
                    + 20'b1));
              end
              default : begin
                // NOP
              end
            endcase
            FRAME_if_1_and_itm = FRAME_land_sva_1 & (~((FRAME_acc_2_psp_sva[5]) |
                (FRAME_acc_2_psp_sva[4]) | (FRAME_acc_2_psp_sva[3]) | (FRAME_acc_2_psp_sva[2])
                | (FRAME_acc_2_psp_sva[1]) | (FRAME_acc_2_psp_sva[0])));
            FRAME_p_1_sva_1 = FRAME_p_1_sva + 19'b1;
            FRAME_slc_itm = readslicef_15_1_14((conv_u2s_14_15(FRAME_p_1_sva_1[18:5])
                + 15'b100110010111011));
            begin : waitLoop2Exit
              forever begin : waitLoop2
                @(posedge clk or negedge ( arst_n ));
                if ( ~ arst_n )
                  disable mainExit;
                if ( en )
                  disable waitLoop2Exit;
              end
            end
            // C-Step 2 of Loop 'FRAME'
            ACC1_if_io_read_vin_rsc_d_1_ftmp = vin_rsc_mgc_in_wire_d;
            acc_imod_9_sva = ACC1_if_acc_65_itm + conv_s2s_8_9((conv_s2s_7_8(conv_s2s_14_7(conv_u2s_2_7(ACC1_5_if_conc_idiv_sg1_sva[5:4])
                * 7'b1110101)) + conv_s2s_7_8(ACC1_if_mul_28_itm)) + conv_s2s_7_8(ACC1_if_acc_60_psp));
            ACC1_if_acc_67_itm = conv_s2s_6_7({(acc_imod_9_sva[8]) , 4'b0 , (acc_imod_9_sva[8])})
                + conv_u2s_6_7(acc_imod_9_sva[5:0]);
            begin : waitLoop3Exit
              forever begin : waitLoop3
                @(posedge clk or negedge ( arst_n ));
                if ( ~ arst_n )
                  disable mainExit;
                if ( en )
                  disable waitLoop3Exit;
              end
            end
            // C-Step 3 of Loop 'FRAME'
            ACC1_if_mul_3_itm = conv_s2u_14_7(conv_u2s_2_7(ACC1_1_if_mul_cse_sva[7:6])
                * 7'b1110101);
            ACC1_if_io_read_vin_rsc_d_2_ftmp = vin_rsc_mgc_in_wire_d;
            begin : waitLoop4Exit
              forever begin : waitLoop4
                @(posedge clk or negedge ( arst_n ));
                if ( ~ arst_n )
                  disable mainExit;
                if ( en )
                  disable waitLoop4Exit;
              end
            end
            // C-Step 4 of Loop 'FRAME'
            acc_imod_sva = ACC1_if_acc_itm + conv_s2s_8_9((conv_s2s_7_8(ACC1_if_mul_3_itm)
                + conv_s2s_7_8(conv_s2s_14_7(conv_u2s_2_7(ACC1_1_if_mul_cse_sva[10:9])
                * 7'b1110011))) + conv_s2s_7_8(ACC1_if_acc_16_psp));
            ACC1_if_acc_23_itm = conv_s2s_6_7({(acc_imod_sva[8]) , 4'b0 , (acc_imod_sva[8])})
                + conv_u2s_6_7(acc_imod_sva[5:0]);
            ACC1_if_io_read_vin_rsc_d_3_ftmp = vin_rsc_mgc_in_wire_d;
            begin : waitLoop5Exit
              forever begin : waitLoop5
                @(posedge clk or negedge ( arst_n ));
                if ( ~ arst_n )
                  disable mainExit;
                if ( en )
                  disable waitLoop5Exit;
              end
            end
            // C-Step 5 of Loop 'FRAME'
            count_sva_1 = 5'b0;
            acc_imod_2_sva = ACC1_if_acc_23_itm + conv_u2s_14_7(conv_u2s_2_7(acc_imod_sva[7:6])
                * 7'b1110101);
            ACC1_if_slc_svs = MUX_v_30_64_2({(ACC1_if_io_read_vin_rsc_d_ftmp[29:0])
                , (ACC1_if_io_read_vin_rsc_d_ftmp[31:2]) , (ACC1_if_io_read_vin_rsc_d_ftmp[33:4])
                , (ACC1_if_io_read_vin_rsc_d_ftmp[35:6]) , (ACC1_if_io_read_vin_rsc_d_ftmp[37:8])
                , (ACC1_if_io_read_vin_rsc_d_ftmp[39:10]) , (ACC1_if_io_read_vin_rsc_d_ftmp[41:12])
                , (ACC1_if_io_read_vin_rsc_d_ftmp[43:14]) , (ACC1_if_io_read_vin_rsc_d_ftmp[45:16])
                , (ACC1_if_io_read_vin_rsc_d_ftmp[47:18]) , (ACC1_if_io_read_vin_rsc_d_ftmp[49:20])
                , (ACC1_if_io_read_vin_rsc_d_ftmp[51:22]) , (ACC1_if_io_read_vin_rsc_d_ftmp[53:24])
                , (ACC1_if_io_read_vin_rsc_d_ftmp[55:26]) , (ACC1_if_io_read_vin_rsc_d_ftmp[57:28])
                , (ACC1_if_io_read_vin_rsc_d_ftmp[59:30]) , (ACC1_if_io_read_vin_rsc_d_ftmp[61:32])
                , (ACC1_if_io_read_vin_rsc_d_ftmp[63:34]) , (ACC1_if_io_read_vin_rsc_d_ftmp[65:36])
                , (ACC1_if_io_read_vin_rsc_d_ftmp[67:38]) , (ACC1_if_io_read_vin_rsc_d_ftmp[69:40])
                , (ACC1_if_io_read_vin_rsc_d_ftmp[71:42]) , (ACC1_if_io_read_vin_rsc_d_ftmp[73:44])
                , (ACC1_if_io_read_vin_rsc_d_ftmp[75:46]) , (ACC1_if_io_read_vin_rsc_d_ftmp[77:48])
                , (ACC1_if_io_read_vin_rsc_d_ftmp[79:50]) , (ACC1_if_io_read_vin_rsc_d_ftmp[81:52])
                , (ACC1_if_io_read_vin_rsc_d_ftmp[83:54]) , (ACC1_if_io_read_vin_rsc_d_ftmp[85:56])
                , (ACC1_if_io_read_vin_rsc_d_ftmp[87:58]) , (ACC1_if_io_read_vin_rsc_d_ftmp[89:60])
                , (ACC1_if_io_read_vin_rsc_d_ftmp[91:62]) , (ACC1_if_io_read_vin_rsc_d_ftmp[93:64])
                , (ACC1_if_io_read_vin_rsc_d_ftmp[95:66]) , (ACC1_if_io_read_vin_rsc_d_ftmp[97:68])
                , (ACC1_if_io_read_vin_rsc_d_ftmp[99:70]) , (ACC1_if_io_read_vin_rsc_d_ftmp[101:72])
                , (ACC1_if_io_read_vin_rsc_d_ftmp[103:74]) , (ACC1_if_io_read_vin_rsc_d_ftmp[105:76])
                , (ACC1_if_io_read_vin_rsc_d_ftmp[107:78]) , (ACC1_if_io_read_vin_rsc_d_ftmp[109:80])
                , (ACC1_if_io_read_vin_rsc_d_ftmp[111:82]) , (ACC1_if_io_read_vin_rsc_d_ftmp[113:84])
                , (ACC1_if_io_read_vin_rsc_d_ftmp[115:86]) , (ACC1_if_io_read_vin_rsc_d_ftmp[117:88])
                , (ACC1_if_io_read_vin_rsc_d_ftmp[119:90]) , (ACC1_if_io_read_vin_rsc_d_ftmp[121:92])
                , (ACC1_if_io_read_vin_rsc_d_ftmp[123:94]) , (ACC1_if_io_read_vin_rsc_d_ftmp[125:96])
                , (ACC1_if_io_read_vin_rsc_d_ftmp[127:98]) , (ACC1_if_io_read_vin_rsc_d_ftmp[129:100])
                , (ACC1_if_io_read_vin_rsc_d_ftmp[131:102]) , (ACC1_if_io_read_vin_rsc_d_ftmp[133:104])
                , (ACC1_if_io_read_vin_rsc_d_ftmp[135:106]) , (ACC1_if_io_read_vin_rsc_d_ftmp[137:108])
                , (ACC1_if_io_read_vin_rsc_d_ftmp[139:110]) , (ACC1_if_io_read_vin_rsc_d_ftmp[141:112])
                , (ACC1_if_io_read_vin_rsc_d_ftmp[143:114]) , (ACC1_if_io_read_vin_rsc_d_ftmp[145:116])
                , (ACC1_if_io_read_vin_rsc_d_ftmp[147:118]) , (ACC1_if_io_read_vin_rsc_d_ftmp[149:120])
                , 30'b0 , 30'b0 , 30'b0}, conv_u2u_4_6({(acc_imod_2_sva[6]) , 1'b0
                , (signext_2_1(acc_imod_2_sva[6]))}) + (acc_imod_2_sva[5:0]));
            case (ACC1_if_slc_svs)
              30'b0 : begin
                // NOP
              end
              default : begin
                count_sva_1 = count_sva + 5'b1;
              end
            endcase
            count_sva_dfm = MUX_v_5_2_2({count_sva , count_sva_1}, (ACC1_if_slc_svs[29])
                | (ACC1_if_slc_svs[28]) | (ACC1_if_slc_svs[27]) | (ACC1_if_slc_svs[26])
                | (ACC1_if_slc_svs[25]) | (ACC1_if_slc_svs[24]) | (ACC1_if_slc_svs[23])
                | (ACC1_if_slc_svs[22]) | (ACC1_if_slc_svs[21]) | (ACC1_if_slc_svs[20])
                | (ACC1_if_slc_svs[19]) | (ACC1_if_slc_svs[18]) | (ACC1_if_slc_svs[17])
                | (ACC1_if_slc_svs[16]) | (ACC1_if_slc_svs[15]) | (ACC1_if_slc_svs[14])
                | (ACC1_if_slc_svs[13]) | (ACC1_if_slc_svs[12]) | (ACC1_if_slc_svs[11])
                | (ACC1_if_slc_svs[10]) | (ACC1_if_slc_svs[9]) | (ACC1_if_slc_svs[8])
                | (ACC1_if_slc_svs[7]) | (ACC1_if_slc_svs[6]) | (ACC1_if_slc_svs[5])
                | (ACC1_if_slc_svs[4]) | (ACC1_if_slc_svs[3]) | (ACC1_if_slc_svs[2])
                | (ACC1_if_slc_svs[1]) | (ACC1_if_slc_svs[0]));
            ACC1_if_io_read_vin_rsc_d_4_ftmp = vin_rsc_mgc_in_wire_d;
            clk_reg_rsc_mgc_out_stdreg_d <= FRAME_if_1_and_itm;
            begin : waitLoop6Exit
              forever begin : waitLoop6
                @(posedge clk or negedge ( arst_n ));
                if ( ~ arst_n )
                  disable mainExit;
                if ( en )
                  disable waitLoop6Exit;
              end
            end
            // C-Step 6 of Loop 'FRAME'
            ACC1_if_mul_9_itm = conv_s2u_14_7(conv_u2s_2_7(ACC1_2_if_acc_2_idiv_sva[7:6])
                * 7'b1110101);
            begin : waitLoop7Exit
              forever begin : waitLoop7
                @(posedge clk or negedge ( arst_n ));
                if ( ~ arst_n )
                  disable mainExit;
                if ( en )
                  disable waitLoop7Exit;
              end
            end
            // C-Step 7 of Loop 'FRAME'
            acc_imod_3_sva = ACC1_if_acc_32_itm + conv_s2s_8_9((conv_s2s_7_8(ACC1_if_mul_9_itm)
                + conv_s2s_7_8(conv_s2s_14_7(conv_u2s_2_7(ACC1_2_if_acc_2_idiv_sva[10:9])
                * 7'b1110011))) + conv_s2s_7_8(ACC1_if_acc_27_psp));
            ACC1_if_acc_34_itm = conv_s2s_6_7({(acc_imod_3_sva[8]) , 4'b0 , (acc_imod_3_sva[8])})
                + conv_u2s_6_7(acc_imod_3_sva[5:0]);
            begin : waitLoop8Exit
              forever begin : waitLoop8
                @(posedge clk or negedge ( arst_n ));
                if ( ~ arst_n )
                  disable mainExit;
                if ( en )
                  disable waitLoop8Exit;
              end
            end
            // C-Step 8 of Loop 'FRAME'
            count_sva_2 = 5'b0;
            acc_imod_4_sva = ACC1_if_acc_34_itm + conv_u2s_14_7(conv_u2s_2_7(acc_imod_3_sva[7:6])
                * 7'b1110101);
            ACC1_if_slc_1_svs = MUX_v_30_64_2({(ACC1_if_io_read_vin_rsc_d_1_ftmp[29:0])
                , (ACC1_if_io_read_vin_rsc_d_1_ftmp[31:2]) , (ACC1_if_io_read_vin_rsc_d_1_ftmp[33:4])
                , (ACC1_if_io_read_vin_rsc_d_1_ftmp[35:6]) , (ACC1_if_io_read_vin_rsc_d_1_ftmp[37:8])
                , (ACC1_if_io_read_vin_rsc_d_1_ftmp[39:10]) , (ACC1_if_io_read_vin_rsc_d_1_ftmp[41:12])
                , (ACC1_if_io_read_vin_rsc_d_1_ftmp[43:14]) , (ACC1_if_io_read_vin_rsc_d_1_ftmp[45:16])
                , (ACC1_if_io_read_vin_rsc_d_1_ftmp[47:18]) , (ACC1_if_io_read_vin_rsc_d_1_ftmp[49:20])
                , (ACC1_if_io_read_vin_rsc_d_1_ftmp[51:22]) , (ACC1_if_io_read_vin_rsc_d_1_ftmp[53:24])
                , (ACC1_if_io_read_vin_rsc_d_1_ftmp[55:26]) , (ACC1_if_io_read_vin_rsc_d_1_ftmp[57:28])
                , (ACC1_if_io_read_vin_rsc_d_1_ftmp[59:30]) , (ACC1_if_io_read_vin_rsc_d_1_ftmp[61:32])
                , (ACC1_if_io_read_vin_rsc_d_1_ftmp[63:34]) , (ACC1_if_io_read_vin_rsc_d_1_ftmp[65:36])
                , (ACC1_if_io_read_vin_rsc_d_1_ftmp[67:38]) , (ACC1_if_io_read_vin_rsc_d_1_ftmp[69:40])
                , (ACC1_if_io_read_vin_rsc_d_1_ftmp[71:42]) , (ACC1_if_io_read_vin_rsc_d_1_ftmp[73:44])
                , (ACC1_if_io_read_vin_rsc_d_1_ftmp[75:46]) , (ACC1_if_io_read_vin_rsc_d_1_ftmp[77:48])
                , (ACC1_if_io_read_vin_rsc_d_1_ftmp[79:50]) , (ACC1_if_io_read_vin_rsc_d_1_ftmp[81:52])
                , (ACC1_if_io_read_vin_rsc_d_1_ftmp[83:54]) , (ACC1_if_io_read_vin_rsc_d_1_ftmp[85:56])
                , (ACC1_if_io_read_vin_rsc_d_1_ftmp[87:58]) , (ACC1_if_io_read_vin_rsc_d_1_ftmp[89:60])
                , (ACC1_if_io_read_vin_rsc_d_1_ftmp[91:62]) , (ACC1_if_io_read_vin_rsc_d_1_ftmp[93:64])
                , (ACC1_if_io_read_vin_rsc_d_1_ftmp[95:66]) , (ACC1_if_io_read_vin_rsc_d_1_ftmp[97:68])
                , (ACC1_if_io_read_vin_rsc_d_1_ftmp[99:70]) , (ACC1_if_io_read_vin_rsc_d_1_ftmp[101:72])
                , (ACC1_if_io_read_vin_rsc_d_1_ftmp[103:74]) , (ACC1_if_io_read_vin_rsc_d_1_ftmp[105:76])
                , (ACC1_if_io_read_vin_rsc_d_1_ftmp[107:78]) , (ACC1_if_io_read_vin_rsc_d_1_ftmp[109:80])
                , (ACC1_if_io_read_vin_rsc_d_1_ftmp[111:82]) , (ACC1_if_io_read_vin_rsc_d_1_ftmp[113:84])
                , (ACC1_if_io_read_vin_rsc_d_1_ftmp[115:86]) , (ACC1_if_io_read_vin_rsc_d_1_ftmp[117:88])
                , (ACC1_if_io_read_vin_rsc_d_1_ftmp[119:90]) , (ACC1_if_io_read_vin_rsc_d_1_ftmp[121:92])
                , (ACC1_if_io_read_vin_rsc_d_1_ftmp[123:94]) , (ACC1_if_io_read_vin_rsc_d_1_ftmp[125:96])
                , (ACC1_if_io_read_vin_rsc_d_1_ftmp[127:98]) , (ACC1_if_io_read_vin_rsc_d_1_ftmp[129:100])
                , (ACC1_if_io_read_vin_rsc_d_1_ftmp[131:102]) , (ACC1_if_io_read_vin_rsc_d_1_ftmp[133:104])
                , (ACC1_if_io_read_vin_rsc_d_1_ftmp[135:106]) , (ACC1_if_io_read_vin_rsc_d_1_ftmp[137:108])
                , (ACC1_if_io_read_vin_rsc_d_1_ftmp[139:110]) , (ACC1_if_io_read_vin_rsc_d_1_ftmp[141:112])
                , (ACC1_if_io_read_vin_rsc_d_1_ftmp[143:114]) , (ACC1_if_io_read_vin_rsc_d_1_ftmp[145:116])
                , (ACC1_if_io_read_vin_rsc_d_1_ftmp[147:118]) , (ACC1_if_io_read_vin_rsc_d_1_ftmp[149:120])
                , 30'b0 , 30'b0 , 30'b0}, conv_u2u_4_6({(acc_imod_4_sva[6]) , 1'b0
                , (signext_2_1(acc_imod_4_sva[6]))}) + (acc_imod_4_sva[5:0]));
            case (ACC1_if_slc_1_svs)
              30'b0 : begin
                // NOP
              end
              default : begin
                count_sva_2 = count_sva_dfm + 5'b1;
              end
            endcase
            count_sva_dfm_1 = MUX_v_5_2_2({count_sva_dfm , count_sva_2}, (ACC1_if_slc_1_svs[29])
                | (ACC1_if_slc_1_svs[28]) | (ACC1_if_slc_1_svs[27]) | (ACC1_if_slc_1_svs[26])
                | (ACC1_if_slc_1_svs[25]) | (ACC1_if_slc_1_svs[24]) | (ACC1_if_slc_1_svs[23])
                | (ACC1_if_slc_1_svs[22]) | (ACC1_if_slc_1_svs[21]) | (ACC1_if_slc_1_svs[20])
                | (ACC1_if_slc_1_svs[19]) | (ACC1_if_slc_1_svs[18]) | (ACC1_if_slc_1_svs[17])
                | (ACC1_if_slc_1_svs[16]) | (ACC1_if_slc_1_svs[15]) | (ACC1_if_slc_1_svs[14])
                | (ACC1_if_slc_1_svs[13]) | (ACC1_if_slc_1_svs[12]) | (ACC1_if_slc_1_svs[11])
                | (ACC1_if_slc_1_svs[10]) | (ACC1_if_slc_1_svs[9]) | (ACC1_if_slc_1_svs[8])
                | (ACC1_if_slc_1_svs[7]) | (ACC1_if_slc_1_svs[6]) | (ACC1_if_slc_1_svs[5])
                | (ACC1_if_slc_1_svs[4]) | (ACC1_if_slc_1_svs[3]) | (ACC1_if_slc_1_svs[2])
                | (ACC1_if_slc_1_svs[1]) | (ACC1_if_slc_1_svs[0]));
            begin : waitLoop9Exit
              forever begin : waitLoop9
                @(posedge clk or negedge ( arst_n ));
                if ( ~ arst_n )
                  disable mainExit;
                if ( en )
                  disable waitLoop9Exit;
              end
            end
            // C-Step 9 of Loop 'FRAME'
            ACC1_if_mul_15_itm = conv_s2u_14_7(conv_u2s_2_7(ACC1_3_if_conc_idiv_sg1_sva[6:5])
                * 7'b1110101);
            begin : waitLoop10Exit
              forever begin : waitLoop10
                @(posedge clk or negedge ( arst_n ));
                if ( ~ arst_n )
                  disable mainExit;
                if ( en )
                  disable waitLoop10Exit;
              end
            end
            // C-Step 10 of Loop 'FRAME'
            acc_imod_5_sva = ACC1_if_acc_43_itm + conv_s2s_8_9((conv_s2s_7_8(ACC1_if_mul_15_itm)
                + conv_s2s_7_8(conv_s2s_14_7(conv_u2s_2_7(ACC1_3_if_conc_idiv_sg1_sva[9:8])
                * 7'b1110011))) + conv_s2s_7_8(ACC1_if_acc_38_psp));
            ACC1_if_acc_45_itm = conv_s2s_6_7({(acc_imod_5_sva[8]) , 4'b0 , (acc_imod_5_sva[8])})
                + conv_u2s_6_7(acc_imod_5_sva[5:0]);
            begin : waitLoop11Exit
              forever begin : waitLoop11
                @(posedge clk or negedge ( arst_n ));
                if ( ~ arst_n )
                  disable mainExit;
                if ( en )
                  disable waitLoop11Exit;
              end
            end
            // C-Step 11 of Loop 'FRAME'
            count_sva_3 = 5'b0;
            acc_imod_6_sva = ACC1_if_acc_45_itm + conv_u2s_14_7(conv_u2s_2_7(acc_imod_5_sva[7:6])
                * 7'b1110101);
            ACC1_if_slc_2_svs = MUX_v_30_64_2({(ACC1_if_io_read_vin_rsc_d_2_ftmp[29:0])
                , (ACC1_if_io_read_vin_rsc_d_2_ftmp[31:2]) , (ACC1_if_io_read_vin_rsc_d_2_ftmp[33:4])
                , (ACC1_if_io_read_vin_rsc_d_2_ftmp[35:6]) , (ACC1_if_io_read_vin_rsc_d_2_ftmp[37:8])
                , (ACC1_if_io_read_vin_rsc_d_2_ftmp[39:10]) , (ACC1_if_io_read_vin_rsc_d_2_ftmp[41:12])
                , (ACC1_if_io_read_vin_rsc_d_2_ftmp[43:14]) , (ACC1_if_io_read_vin_rsc_d_2_ftmp[45:16])
                , (ACC1_if_io_read_vin_rsc_d_2_ftmp[47:18]) , (ACC1_if_io_read_vin_rsc_d_2_ftmp[49:20])
                , (ACC1_if_io_read_vin_rsc_d_2_ftmp[51:22]) , (ACC1_if_io_read_vin_rsc_d_2_ftmp[53:24])
                , (ACC1_if_io_read_vin_rsc_d_2_ftmp[55:26]) , (ACC1_if_io_read_vin_rsc_d_2_ftmp[57:28])
                , (ACC1_if_io_read_vin_rsc_d_2_ftmp[59:30]) , (ACC1_if_io_read_vin_rsc_d_2_ftmp[61:32])
                , (ACC1_if_io_read_vin_rsc_d_2_ftmp[63:34]) , (ACC1_if_io_read_vin_rsc_d_2_ftmp[65:36])
                , (ACC1_if_io_read_vin_rsc_d_2_ftmp[67:38]) , (ACC1_if_io_read_vin_rsc_d_2_ftmp[69:40])
                , (ACC1_if_io_read_vin_rsc_d_2_ftmp[71:42]) , (ACC1_if_io_read_vin_rsc_d_2_ftmp[73:44])
                , (ACC1_if_io_read_vin_rsc_d_2_ftmp[75:46]) , (ACC1_if_io_read_vin_rsc_d_2_ftmp[77:48])
                , (ACC1_if_io_read_vin_rsc_d_2_ftmp[79:50]) , (ACC1_if_io_read_vin_rsc_d_2_ftmp[81:52])
                , (ACC1_if_io_read_vin_rsc_d_2_ftmp[83:54]) , (ACC1_if_io_read_vin_rsc_d_2_ftmp[85:56])
                , (ACC1_if_io_read_vin_rsc_d_2_ftmp[87:58]) , (ACC1_if_io_read_vin_rsc_d_2_ftmp[89:60])
                , (ACC1_if_io_read_vin_rsc_d_2_ftmp[91:62]) , (ACC1_if_io_read_vin_rsc_d_2_ftmp[93:64])
                , (ACC1_if_io_read_vin_rsc_d_2_ftmp[95:66]) , (ACC1_if_io_read_vin_rsc_d_2_ftmp[97:68])
                , (ACC1_if_io_read_vin_rsc_d_2_ftmp[99:70]) , (ACC1_if_io_read_vin_rsc_d_2_ftmp[101:72])
                , (ACC1_if_io_read_vin_rsc_d_2_ftmp[103:74]) , (ACC1_if_io_read_vin_rsc_d_2_ftmp[105:76])
                , (ACC1_if_io_read_vin_rsc_d_2_ftmp[107:78]) , (ACC1_if_io_read_vin_rsc_d_2_ftmp[109:80])
                , (ACC1_if_io_read_vin_rsc_d_2_ftmp[111:82]) , (ACC1_if_io_read_vin_rsc_d_2_ftmp[113:84])
                , (ACC1_if_io_read_vin_rsc_d_2_ftmp[115:86]) , (ACC1_if_io_read_vin_rsc_d_2_ftmp[117:88])
                , (ACC1_if_io_read_vin_rsc_d_2_ftmp[119:90]) , (ACC1_if_io_read_vin_rsc_d_2_ftmp[121:92])
                , (ACC1_if_io_read_vin_rsc_d_2_ftmp[123:94]) , (ACC1_if_io_read_vin_rsc_d_2_ftmp[125:96])
                , (ACC1_if_io_read_vin_rsc_d_2_ftmp[127:98]) , (ACC1_if_io_read_vin_rsc_d_2_ftmp[129:100])
                , (ACC1_if_io_read_vin_rsc_d_2_ftmp[131:102]) , (ACC1_if_io_read_vin_rsc_d_2_ftmp[133:104])
                , (ACC1_if_io_read_vin_rsc_d_2_ftmp[135:106]) , (ACC1_if_io_read_vin_rsc_d_2_ftmp[137:108])
                , (ACC1_if_io_read_vin_rsc_d_2_ftmp[139:110]) , (ACC1_if_io_read_vin_rsc_d_2_ftmp[141:112])
                , (ACC1_if_io_read_vin_rsc_d_2_ftmp[143:114]) , (ACC1_if_io_read_vin_rsc_d_2_ftmp[145:116])
                , (ACC1_if_io_read_vin_rsc_d_2_ftmp[147:118]) , (ACC1_if_io_read_vin_rsc_d_2_ftmp[149:120])
                , 30'b0 , 30'b0 , 30'b0}, conv_u2u_4_6({(acc_imod_6_sva[6]) , 1'b0
                , (signext_2_1(acc_imod_6_sva[6]))}) + (acc_imod_6_sva[5:0]));
            case (ACC1_if_slc_2_svs)
              30'b0 : begin
                // NOP
              end
              default : begin
                count_sva_3 = count_sva_dfm_1 + 5'b1;
              end
            endcase
            count_sva_dfm_2 = MUX_v_5_2_2({count_sva_dfm_1 , count_sva_3}, (ACC1_if_slc_2_svs[29])
                | (ACC1_if_slc_2_svs[28]) | (ACC1_if_slc_2_svs[27]) | (ACC1_if_slc_2_svs[26])
                | (ACC1_if_slc_2_svs[25]) | (ACC1_if_slc_2_svs[24]) | (ACC1_if_slc_2_svs[23])
                | (ACC1_if_slc_2_svs[22]) | (ACC1_if_slc_2_svs[21]) | (ACC1_if_slc_2_svs[20])
                | (ACC1_if_slc_2_svs[19]) | (ACC1_if_slc_2_svs[18]) | (ACC1_if_slc_2_svs[17])
                | (ACC1_if_slc_2_svs[16]) | (ACC1_if_slc_2_svs[15]) | (ACC1_if_slc_2_svs[14])
                | (ACC1_if_slc_2_svs[13]) | (ACC1_if_slc_2_svs[12]) | (ACC1_if_slc_2_svs[11])
                | (ACC1_if_slc_2_svs[10]) | (ACC1_if_slc_2_svs[9]) | (ACC1_if_slc_2_svs[8])
                | (ACC1_if_slc_2_svs[7]) | (ACC1_if_slc_2_svs[6]) | (ACC1_if_slc_2_svs[5])
                | (ACC1_if_slc_2_svs[4]) | (ACC1_if_slc_2_svs[3]) | (ACC1_if_slc_2_svs[2])
                | (ACC1_if_slc_2_svs[1]) | (ACC1_if_slc_2_svs[0]));
            begin : waitLoop12Exit
              forever begin : waitLoop12
                @(posedge clk or negedge ( arst_n ));
                if ( ~ arst_n )
                  disable mainExit;
                if ( en )
                  disable waitLoop12Exit;
              end
            end
            // C-Step 12 of Loop 'FRAME'
            ACC1_if_mul_21_itm = conv_s2u_14_7(conv_u2s_2_7(ACC1_4_if_acc_2_idiv_sva[7:6])
                * 7'b1110101);
            begin : waitLoop13Exit
              forever begin : waitLoop13
                @(posedge clk or negedge ( arst_n ));
                if ( ~ arst_n )
                  disable mainExit;
                if ( en )
                  disable waitLoop13Exit;
              end
            end
            // C-Step 13 of Loop 'FRAME'
            acc_imod_7_sva = ACC1_if_acc_54_itm + conv_s2s_8_9((conv_s2s_7_8(ACC1_if_mul_21_itm)
                + conv_s2s_7_8(conv_s2s_14_7(conv_u2s_2_7(ACC1_4_if_acc_2_idiv_sva[10:9])
                * 7'b1110011))) + conv_s2s_7_8(ACC1_if_acc_49_psp));
            ACC1_if_acc_56_itm = conv_s2s_6_7({(acc_imod_7_sva[8]) , 4'b0 , (acc_imod_7_sva[8])})
                + conv_u2s_6_7(acc_imod_7_sva[5:0]);
            begin : waitLoop14Exit
              forever begin : waitLoop14
                @(posedge clk or negedge ( arst_n ));
                if ( ~ arst_n )
                  disable mainExit;
                if ( en )
                  disable waitLoop14Exit;
              end
            end
            // C-Step 14 of Loop 'FRAME'
            count_sva_4 = 5'b0;
            acc_imod_8_sva = ACC1_if_acc_56_itm + conv_u2s_14_7(conv_u2s_2_7(acc_imod_7_sva[7:6])
                * 7'b1110101);
            ACC1_if_slc_3_svs = MUX_v_30_64_2({(ACC1_if_io_read_vin_rsc_d_3_ftmp[29:0])
                , (ACC1_if_io_read_vin_rsc_d_3_ftmp[31:2]) , (ACC1_if_io_read_vin_rsc_d_3_ftmp[33:4])
                , (ACC1_if_io_read_vin_rsc_d_3_ftmp[35:6]) , (ACC1_if_io_read_vin_rsc_d_3_ftmp[37:8])
                , (ACC1_if_io_read_vin_rsc_d_3_ftmp[39:10]) , (ACC1_if_io_read_vin_rsc_d_3_ftmp[41:12])
                , (ACC1_if_io_read_vin_rsc_d_3_ftmp[43:14]) , (ACC1_if_io_read_vin_rsc_d_3_ftmp[45:16])
                , (ACC1_if_io_read_vin_rsc_d_3_ftmp[47:18]) , (ACC1_if_io_read_vin_rsc_d_3_ftmp[49:20])
                , (ACC1_if_io_read_vin_rsc_d_3_ftmp[51:22]) , (ACC1_if_io_read_vin_rsc_d_3_ftmp[53:24])
                , (ACC1_if_io_read_vin_rsc_d_3_ftmp[55:26]) , (ACC1_if_io_read_vin_rsc_d_3_ftmp[57:28])
                , (ACC1_if_io_read_vin_rsc_d_3_ftmp[59:30]) , (ACC1_if_io_read_vin_rsc_d_3_ftmp[61:32])
                , (ACC1_if_io_read_vin_rsc_d_3_ftmp[63:34]) , (ACC1_if_io_read_vin_rsc_d_3_ftmp[65:36])
                , (ACC1_if_io_read_vin_rsc_d_3_ftmp[67:38]) , (ACC1_if_io_read_vin_rsc_d_3_ftmp[69:40])
                , (ACC1_if_io_read_vin_rsc_d_3_ftmp[71:42]) , (ACC1_if_io_read_vin_rsc_d_3_ftmp[73:44])
                , (ACC1_if_io_read_vin_rsc_d_3_ftmp[75:46]) , (ACC1_if_io_read_vin_rsc_d_3_ftmp[77:48])
                , (ACC1_if_io_read_vin_rsc_d_3_ftmp[79:50]) , (ACC1_if_io_read_vin_rsc_d_3_ftmp[81:52])
                , (ACC1_if_io_read_vin_rsc_d_3_ftmp[83:54]) , (ACC1_if_io_read_vin_rsc_d_3_ftmp[85:56])
                , (ACC1_if_io_read_vin_rsc_d_3_ftmp[87:58]) , (ACC1_if_io_read_vin_rsc_d_3_ftmp[89:60])
                , (ACC1_if_io_read_vin_rsc_d_3_ftmp[91:62]) , (ACC1_if_io_read_vin_rsc_d_3_ftmp[93:64])
                , (ACC1_if_io_read_vin_rsc_d_3_ftmp[95:66]) , (ACC1_if_io_read_vin_rsc_d_3_ftmp[97:68])
                , (ACC1_if_io_read_vin_rsc_d_3_ftmp[99:70]) , (ACC1_if_io_read_vin_rsc_d_3_ftmp[101:72])
                , (ACC1_if_io_read_vin_rsc_d_3_ftmp[103:74]) , (ACC1_if_io_read_vin_rsc_d_3_ftmp[105:76])
                , (ACC1_if_io_read_vin_rsc_d_3_ftmp[107:78]) , (ACC1_if_io_read_vin_rsc_d_3_ftmp[109:80])
                , (ACC1_if_io_read_vin_rsc_d_3_ftmp[111:82]) , (ACC1_if_io_read_vin_rsc_d_3_ftmp[113:84])
                , (ACC1_if_io_read_vin_rsc_d_3_ftmp[115:86]) , (ACC1_if_io_read_vin_rsc_d_3_ftmp[117:88])
                , (ACC1_if_io_read_vin_rsc_d_3_ftmp[119:90]) , (ACC1_if_io_read_vin_rsc_d_3_ftmp[121:92])
                , (ACC1_if_io_read_vin_rsc_d_3_ftmp[123:94]) , (ACC1_if_io_read_vin_rsc_d_3_ftmp[125:96])
                , (ACC1_if_io_read_vin_rsc_d_3_ftmp[127:98]) , (ACC1_if_io_read_vin_rsc_d_3_ftmp[129:100])
                , (ACC1_if_io_read_vin_rsc_d_3_ftmp[131:102]) , (ACC1_if_io_read_vin_rsc_d_3_ftmp[133:104])
                , (ACC1_if_io_read_vin_rsc_d_3_ftmp[135:106]) , (ACC1_if_io_read_vin_rsc_d_3_ftmp[137:108])
                , (ACC1_if_io_read_vin_rsc_d_3_ftmp[139:110]) , (ACC1_if_io_read_vin_rsc_d_3_ftmp[141:112])
                , (ACC1_if_io_read_vin_rsc_d_3_ftmp[143:114]) , (ACC1_if_io_read_vin_rsc_d_3_ftmp[145:116])
                , (ACC1_if_io_read_vin_rsc_d_3_ftmp[147:118]) , (ACC1_if_io_read_vin_rsc_d_3_ftmp[149:120])
                , 30'b0 , 30'b0 , 30'b0}, conv_u2u_4_6({(acc_imod_8_sva[6]) , 1'b0
                , (signext_2_1(acc_imod_8_sva[6]))}) + (acc_imod_8_sva[5:0]));
            case (ACC1_if_slc_3_svs)
              30'b0 : begin
                // NOP
              end
              default : begin
                count_sva_4 = count_sva_dfm_2 + 5'b1;
              end
            endcase
            count_sva_dfm_3 = MUX_v_5_2_2({count_sva_dfm_2 , count_sva_4}, (ACC1_if_slc_3_svs[29])
                | (ACC1_if_slc_3_svs[28]) | (ACC1_if_slc_3_svs[27]) | (ACC1_if_slc_3_svs[26])
                | (ACC1_if_slc_3_svs[25]) | (ACC1_if_slc_3_svs[24]) | (ACC1_if_slc_3_svs[23])
                | (ACC1_if_slc_3_svs[22]) | (ACC1_if_slc_3_svs[21]) | (ACC1_if_slc_3_svs[20])
                | (ACC1_if_slc_3_svs[19]) | (ACC1_if_slc_3_svs[18]) | (ACC1_if_slc_3_svs[17])
                | (ACC1_if_slc_3_svs[16]) | (ACC1_if_slc_3_svs[15]) | (ACC1_if_slc_3_svs[14])
                | (ACC1_if_slc_3_svs[13]) | (ACC1_if_slc_3_svs[12]) | (ACC1_if_slc_3_svs[11])
                | (ACC1_if_slc_3_svs[10]) | (ACC1_if_slc_3_svs[9]) | (ACC1_if_slc_3_svs[8])
                | (ACC1_if_slc_3_svs[7]) | (ACC1_if_slc_3_svs[6]) | (ACC1_if_slc_3_svs[5])
                | (ACC1_if_slc_3_svs[4]) | (ACC1_if_slc_3_svs[3]) | (ACC1_if_slc_3_svs[2])
                | (ACC1_if_slc_3_svs[1]) | (ACC1_if_slc_3_svs[0]));
            begin : waitLoop15Exit
              forever begin : waitLoop15
                @(posedge clk or negedge ( arst_n ));
                if ( ~ arst_n )
                  disable mainExit;
                if ( en )
                  disable waitLoop15Exit;
              end
            end
            // C-Step 15 of Loop 'FRAME'
            out_sva_1 = 1'b0;
            count_sva_5 = 5'b0;
            acc_imod_10_sva = ACC1_if_acc_67_itm + conv_u2s_14_7(conv_u2s_2_7(acc_imod_9_sva[7:6])
                * 7'b1110101);
            ACC1_if_slc_4_svs = MUX_v_30_64_2({(ACC1_if_io_read_vin_rsc_d_4_ftmp[29:0])
                , (ACC1_if_io_read_vin_rsc_d_4_ftmp[31:2]) , (ACC1_if_io_read_vin_rsc_d_4_ftmp[33:4])
                , (ACC1_if_io_read_vin_rsc_d_4_ftmp[35:6]) , (ACC1_if_io_read_vin_rsc_d_4_ftmp[37:8])
                , (ACC1_if_io_read_vin_rsc_d_4_ftmp[39:10]) , (ACC1_if_io_read_vin_rsc_d_4_ftmp[41:12])
                , (ACC1_if_io_read_vin_rsc_d_4_ftmp[43:14]) , (ACC1_if_io_read_vin_rsc_d_4_ftmp[45:16])
                , (ACC1_if_io_read_vin_rsc_d_4_ftmp[47:18]) , (ACC1_if_io_read_vin_rsc_d_4_ftmp[49:20])
                , (ACC1_if_io_read_vin_rsc_d_4_ftmp[51:22]) , (ACC1_if_io_read_vin_rsc_d_4_ftmp[53:24])
                , (ACC1_if_io_read_vin_rsc_d_4_ftmp[55:26]) , (ACC1_if_io_read_vin_rsc_d_4_ftmp[57:28])
                , (ACC1_if_io_read_vin_rsc_d_4_ftmp[59:30]) , (ACC1_if_io_read_vin_rsc_d_4_ftmp[61:32])
                , (ACC1_if_io_read_vin_rsc_d_4_ftmp[63:34]) , (ACC1_if_io_read_vin_rsc_d_4_ftmp[65:36])
                , (ACC1_if_io_read_vin_rsc_d_4_ftmp[67:38]) , (ACC1_if_io_read_vin_rsc_d_4_ftmp[69:40])
                , (ACC1_if_io_read_vin_rsc_d_4_ftmp[71:42]) , (ACC1_if_io_read_vin_rsc_d_4_ftmp[73:44])
                , (ACC1_if_io_read_vin_rsc_d_4_ftmp[75:46]) , (ACC1_if_io_read_vin_rsc_d_4_ftmp[77:48])
                , (ACC1_if_io_read_vin_rsc_d_4_ftmp[79:50]) , (ACC1_if_io_read_vin_rsc_d_4_ftmp[81:52])
                , (ACC1_if_io_read_vin_rsc_d_4_ftmp[83:54]) , (ACC1_if_io_read_vin_rsc_d_4_ftmp[85:56])
                , (ACC1_if_io_read_vin_rsc_d_4_ftmp[87:58]) , (ACC1_if_io_read_vin_rsc_d_4_ftmp[89:60])
                , (ACC1_if_io_read_vin_rsc_d_4_ftmp[91:62]) , (ACC1_if_io_read_vin_rsc_d_4_ftmp[93:64])
                , (ACC1_if_io_read_vin_rsc_d_4_ftmp[95:66]) , (ACC1_if_io_read_vin_rsc_d_4_ftmp[97:68])
                , (ACC1_if_io_read_vin_rsc_d_4_ftmp[99:70]) , (ACC1_if_io_read_vin_rsc_d_4_ftmp[101:72])
                , (ACC1_if_io_read_vin_rsc_d_4_ftmp[103:74]) , (ACC1_if_io_read_vin_rsc_d_4_ftmp[105:76])
                , (ACC1_if_io_read_vin_rsc_d_4_ftmp[107:78]) , (ACC1_if_io_read_vin_rsc_d_4_ftmp[109:80])
                , (ACC1_if_io_read_vin_rsc_d_4_ftmp[111:82]) , (ACC1_if_io_read_vin_rsc_d_4_ftmp[113:84])
                , (ACC1_if_io_read_vin_rsc_d_4_ftmp[115:86]) , (ACC1_if_io_read_vin_rsc_d_4_ftmp[117:88])
                , (ACC1_if_io_read_vin_rsc_d_4_ftmp[119:90]) , (ACC1_if_io_read_vin_rsc_d_4_ftmp[121:92])
                , (ACC1_if_io_read_vin_rsc_d_4_ftmp[123:94]) , (ACC1_if_io_read_vin_rsc_d_4_ftmp[125:96])
                , (ACC1_if_io_read_vin_rsc_d_4_ftmp[127:98]) , (ACC1_if_io_read_vin_rsc_d_4_ftmp[129:100])
                , (ACC1_if_io_read_vin_rsc_d_4_ftmp[131:102]) , (ACC1_if_io_read_vin_rsc_d_4_ftmp[133:104])
                , (ACC1_if_io_read_vin_rsc_d_4_ftmp[135:106]) , (ACC1_if_io_read_vin_rsc_d_4_ftmp[137:108])
                , (ACC1_if_io_read_vin_rsc_d_4_ftmp[139:110]) , (ACC1_if_io_read_vin_rsc_d_4_ftmp[141:112])
                , (ACC1_if_io_read_vin_rsc_d_4_ftmp[143:114]) , (ACC1_if_io_read_vin_rsc_d_4_ftmp[145:116])
                , (ACC1_if_io_read_vin_rsc_d_4_ftmp[147:118]) , (ACC1_if_io_read_vin_rsc_d_4_ftmp[149:120])
                , 30'b0 , 30'b0 , 30'b0}, conv_u2u_4_6({(acc_imod_10_sva[6]) , 1'b0
                , (signext_2_1(acc_imod_10_sva[6]))}) + (acc_imod_10_sva[5:0]));
            case (ACC1_if_slc_4_svs)
              30'b0 : begin
                // NOP
              end
              default : begin
                count_sva_5 = count_sva_dfm_3 + 5'b1;
              end
            endcase
            count_sva_dfm_4 = MUX_v_5_2_2({count_sva_dfm_3 , count_sva_5}, (ACC1_if_slc_4_svs[29])
                | (ACC1_if_slc_4_svs[28]) | (ACC1_if_slc_4_svs[27]) | (ACC1_if_slc_4_svs[26])
                | (ACC1_if_slc_4_svs[25]) | (ACC1_if_slc_4_svs[24]) | (ACC1_if_slc_4_svs[23])
                | (ACC1_if_slc_4_svs[22]) | (ACC1_if_slc_4_svs[21]) | (ACC1_if_slc_4_svs[20])
                | (ACC1_if_slc_4_svs[19]) | (ACC1_if_slc_4_svs[18]) | (ACC1_if_slc_4_svs[17])
                | (ACC1_if_slc_4_svs[16]) | (ACC1_if_slc_4_svs[15]) | (ACC1_if_slc_4_svs[14])
                | (ACC1_if_slc_4_svs[13]) | (ACC1_if_slc_4_svs[12]) | (ACC1_if_slc_4_svs[11])
                | (ACC1_if_slc_4_svs[10]) | (ACC1_if_slc_4_svs[9]) | (ACC1_if_slc_4_svs[8])
                | (ACC1_if_slc_4_svs[7]) | (ACC1_if_slc_4_svs[6]) | (ACC1_if_slc_4_svs[5])
                | (ACC1_if_slc_4_svs[4]) | (ACC1_if_slc_4_svs[3]) | (ACC1_if_slc_4_svs[2])
                | (ACC1_if_slc_4_svs[1]) | (ACC1_if_slc_4_svs[0]));
            case (FRAME_acc_2_psp_sva)
              6'b11000 : begin
                out_sva_1 = readslicef_4_1_3((({1'b1 , (~ (count_sva_dfm_4[4:2]))})
                    + 4'b101));
              end
              default : begin
                // NOP
              end
            endcase
            out_sva_dfm = MUX_s_1_2_2({out_sva_1 , out_sva}, unequal_tmp_5);
            vout_rsc_mgc_out_stdreg_d <= out_sva_dfm;
            FRAME_and_itm = count_sva_dfm_4 & ({{4{unequal_tmp_5}}, unequal_tmp_5});
            begin : waitLoop16Exit
              forever begin : waitLoop16
                @(posedge clk or negedge ( arst_n ));
                if ( ~ arst_n )
                  disable mainExit;
                if ( en )
                  disable waitLoop16Exit;
              end
            end
            // C-Step 16 of Loop 'FRAME'
            if ( ~ FRAME_slc_itm )
              disable FRAMEExit;
            count_sva = FRAME_and_itm;
            out_sva = out_sva_dfm;
            FRAME_p_1_sva = FRAME_p_1_sva_1;
          end
        end
      end
    end
    ACC1_if_acc_49_psp = 7'b0;
    ACC1_if_acc_38_psp = 7'b0;
    ACC1_if_acc_27_psp = 7'b0;
    ACC1_if_acc_16_psp = 7'b0;
    ACC1_if_acc_60_psp = 7'b0;
    FRAME_if_acc_11_sdt = 4'b0;
    FRAME_and_itm = 5'b0;
    FRAME_slc_itm = 1'b0;
    FRAME_if_1_and_itm = 1'b0;
    ACC1_if_acc_67_itm = 7'b0;
    ACC1_if_mul_28_itm = 7'b0;
    ACC1_if_acc_65_itm = 9'b0;
    ACC1_if_acc_56_itm = 7'b0;
    ACC1_if_mul_21_itm = 7'b0;
    ACC1_if_acc_54_itm = 9'b0;
    ACC1_if_acc_45_itm = 7'b0;
    ACC1_if_mul_15_itm = 7'b0;
    ACC1_if_acc_43_itm = 9'b0;
    ACC1_if_acc_34_itm = 7'b0;
    ACC1_if_mul_9_itm = 7'b0;
    ACC1_if_acc_32_itm = 9'b0;
    ACC1_if_acc_23_itm = 7'b0;
    ACC1_if_mul_3_itm = 7'b0;
    ACC1_if_acc_itm = 9'b0;
    ACC1_if_io_read_vin_rsc_d_4_ftmp = 150'b0;
    ACC1_if_io_read_vin_rsc_d_3_ftmp = 150'b0;
    ACC1_if_io_read_vin_rsc_d_2_ftmp = 150'b0;
    ACC1_if_io_read_vin_rsc_d_1_ftmp = 150'b0;
    ACC1_if_io_read_vin_rsc_d_ftmp = 150'b0;
    FRAME_p_1_sva_1 = 19'b0;
    FRAME_land_sva_1 = 1'b0;
    out_sva_dfm = 1'b0;
    unequal_tmp_5 = 1'b0;
    out_sva_1 = 1'b0;
    FRAME_acc_2_psp_sva = 6'b0;
    acc_imod_1_sva = 6'b0;
    acc_psp_sva = 7'b0;
    count_sva_dfm_4 = 5'b0;
    count_sva_5 = 5'b0;
    ACC1_if_slc_4_svs = 30'b0;
    acc_imod_10_sva = 7'b0;
    acc_imod_9_sva = 9'b0;
    ACC1_5_if_conc_idiv_sg1_sva = 23'b0;
    count_sva_dfm_3 = 5'b0;
    count_sva_4 = 5'b0;
    ACC1_if_slc_3_svs = 30'b0;
    acc_imod_8_sva = 7'b0;
    acc_imod_7_sva = 9'b0;
    ACC1_4_if_acc_2_idiv_sva = 25'b0;
    count_sva_dfm_2 = 5'b0;
    count_sva_3 = 5'b0;
    ACC1_if_slc_2_svs = 30'b0;
    acc_imod_6_sva = 7'b0;
    acc_imod_5_sva = 9'b0;
    ACC1_3_if_conc_idiv_sg1_sva = 24'b0;
    count_sva_dfm_1 = 5'b0;
    count_sva_2 = 5'b0;
    ACC1_if_slc_1_svs = 30'b0;
    acc_imod_4_sva = 7'b0;
    acc_imod_3_sva = 9'b0;
    ACC1_2_if_acc_2_idiv_sva = 25'b0;
    count_sva_dfm = 5'b0;
    count_sva_1 = 5'b0;
    ACC1_if_slc_svs = 30'b0;
    acc_imod_2_sva = 7'b0;
    acc_imod_sva = 9'b0;
    ACC1_1_if_mul_cse_sva = 25'b0;
    FRAME_p_1_sva = 19'b0;
    out_sva = 1'b0;
    count_sva = 5'b0;
    vout_rsc_mgc_out_stdreg_d <= 1'b0;
    clk_reg_rsc_mgc_out_stdreg_d <= 1'b0;
  end


  function [2:0] readslicef_4_3_1;
    input [3:0] vector;
    reg [3:0] tmp;
  begin
    tmp = vector >> 1;
    readslicef_4_3_1 = tmp[2:0];
  end
  endfunction


  function [2:0] signext_3_2;
    input [1:0] vector;
  begin
    signext_3_2= {{1{vector[1]}}, vector};
  end
  endfunction


  function [2:0] signext_3_1;
    input [0:0] vector;
  begin
    signext_3_1= {{2{vector[0]}}, vector};
  end
  endfunction


  function [1:0] signext_2_1;
    input [0:0] vector;
  begin
    signext_2_1= {{1{vector[0]}}, vector};
  end
  endfunction


  function [4:0] signext_5_4;
    input [3:0] vector;
  begin
    signext_5_4= {{1{vector[3]}}, vector};
  end
  endfunction


  function [0:0] readslicef_20_1_19;
    input [19:0] vector;
    reg [19:0] tmp;
  begin
    tmp = vector >> 19;
    readslicef_20_1_19 = tmp[0:0];
  end
  endfunction


  function [0:0] readslicef_15_1_14;
    input [14:0] vector;
    reg [14:0] tmp;
  begin
    tmp = vector >> 14;
    readslicef_15_1_14 = tmp[0:0];
  end
  endfunction


  function [29:0] MUX_v_30_64_2;
    input [1919:0] inputs;
    input [5:0] sel;
    reg [29:0] result;
  begin
    case (sel)
      6'b000000 : begin
        result = inputs[1919:1890];
      end
      6'b000001 : begin
        result = inputs[1889:1860];
      end
      6'b000010 : begin
        result = inputs[1859:1830];
      end
      6'b000011 : begin
        result = inputs[1829:1800];
      end
      6'b000100 : begin
        result = inputs[1799:1770];
      end
      6'b000101 : begin
        result = inputs[1769:1740];
      end
      6'b000110 : begin
        result = inputs[1739:1710];
      end
      6'b000111 : begin
        result = inputs[1709:1680];
      end
      6'b001000 : begin
        result = inputs[1679:1650];
      end
      6'b001001 : begin
        result = inputs[1649:1620];
      end
      6'b001010 : begin
        result = inputs[1619:1590];
      end
      6'b001011 : begin
        result = inputs[1589:1560];
      end
      6'b001100 : begin
        result = inputs[1559:1530];
      end
      6'b001101 : begin
        result = inputs[1529:1500];
      end
      6'b001110 : begin
        result = inputs[1499:1470];
      end
      6'b001111 : begin
        result = inputs[1469:1440];
      end
      6'b010000 : begin
        result = inputs[1439:1410];
      end
      6'b010001 : begin
        result = inputs[1409:1380];
      end
      6'b010010 : begin
        result = inputs[1379:1350];
      end
      6'b010011 : begin
        result = inputs[1349:1320];
      end
      6'b010100 : begin
        result = inputs[1319:1290];
      end
      6'b010101 : begin
        result = inputs[1289:1260];
      end
      6'b010110 : begin
        result = inputs[1259:1230];
      end
      6'b010111 : begin
        result = inputs[1229:1200];
      end
      6'b011000 : begin
        result = inputs[1199:1170];
      end
      6'b011001 : begin
        result = inputs[1169:1140];
      end
      6'b011010 : begin
        result = inputs[1139:1110];
      end
      6'b011011 : begin
        result = inputs[1109:1080];
      end
      6'b011100 : begin
        result = inputs[1079:1050];
      end
      6'b011101 : begin
        result = inputs[1049:1020];
      end
      6'b011110 : begin
        result = inputs[1019:990];
      end
      6'b011111 : begin
        result = inputs[989:960];
      end
      6'b100000 : begin
        result = inputs[959:930];
      end
      6'b100001 : begin
        result = inputs[929:900];
      end
      6'b100010 : begin
        result = inputs[899:870];
      end
      6'b100011 : begin
        result = inputs[869:840];
      end
      6'b100100 : begin
        result = inputs[839:810];
      end
      6'b100101 : begin
        result = inputs[809:780];
      end
      6'b100110 : begin
        result = inputs[779:750];
      end
      6'b100111 : begin
        result = inputs[749:720];
      end
      6'b101000 : begin
        result = inputs[719:690];
      end
      6'b101001 : begin
        result = inputs[689:660];
      end
      6'b101010 : begin
        result = inputs[659:630];
      end
      6'b101011 : begin
        result = inputs[629:600];
      end
      6'b101100 : begin
        result = inputs[599:570];
      end
      6'b101101 : begin
        result = inputs[569:540];
      end
      6'b101110 : begin
        result = inputs[539:510];
      end
      6'b101111 : begin
        result = inputs[509:480];
      end
      6'b110000 : begin
        result = inputs[479:450];
      end
      6'b110001 : begin
        result = inputs[449:420];
      end
      6'b110010 : begin
        result = inputs[419:390];
      end
      6'b110011 : begin
        result = inputs[389:360];
      end
      6'b110100 : begin
        result = inputs[359:330];
      end
      6'b110101 : begin
        result = inputs[329:300];
      end
      6'b110110 : begin
        result = inputs[299:270];
      end
      6'b110111 : begin
        result = inputs[269:240];
      end
      6'b111000 : begin
        result = inputs[239:210];
      end
      6'b111001 : begin
        result = inputs[209:180];
      end
      6'b111010 : begin
        result = inputs[179:150];
      end
      6'b111011 : begin
        result = inputs[149:120];
      end
      6'b111100 : begin
        result = inputs[119:90];
      end
      6'b111101 : begin
        result = inputs[89:60];
      end
      6'b111110 : begin
        result = inputs[59:30];
      end
      6'b111111 : begin
        result = inputs[29:0];
      end
      default : begin
        result = inputs[1919:1890];
      end
    endcase
    MUX_v_30_64_2 = result;
  end
  endfunction


  function [4:0] MUX_v_5_2_2;
    input [9:0] inputs;
    input [0:0] sel;
    reg [4:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = inputs[9:5];
      end
      1'b1 : begin
        result = inputs[4:0];
      end
      default : begin
        result = inputs[9:5];
      end
    endcase
    MUX_v_5_2_2 = result;
  end
  endfunction


  function [0:0] readslicef_4_1_3;
    input [3:0] vector;
    reg [3:0] tmp;
  begin
    tmp = vector >> 3;
    readslicef_4_1_3 = tmp[0:0];
  end
  endfunction


  function [0:0] MUX_s_1_2_2;
    input [1:0] inputs;
    input [0:0] sel;
    reg [0:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = inputs[1:1];
      end
      1'b1 : begin
        result = inputs[0:0];
      end
      default : begin
        result = inputs[1:1];
      end
    endcase
    MUX_s_1_2_2 = result;
  end
  endfunction


  function  [24:0] conv_u2u_50_25 ;
    input [49:0]  vector ;
  begin
    conv_u2u_50_25 = vector[24:0];
  end
  endfunction


  function  [24:0] conv_u2u_19_25 ;
    input [18:0]  vector ;
  begin
    conv_u2u_19_25 = {{6{1'b0}}, vector};
  end
  endfunction


  function signed [8:0] conv_u2s_8_9 ;
    input [7:0]  vector ;
  begin
    conv_u2s_8_9 = {1'b0, vector};
  end
  endfunction


  function  [7:0] conv_u2u_7_8 ;
    input [6:0]  vector ;
  begin
    conv_u2u_7_8 = {1'b0, vector};
  end
  endfunction


  function  [6:0] conv_u2u_6_7 ;
    input [5:0]  vector ;
  begin
    conv_u2u_6_7 = {1'b0, vector};
  end
  endfunction


  function  [6:0] conv_u2u_5_7 ;
    input [4:0]  vector ;
  begin
    conv_u2u_5_7 = {{2{1'b0}}, vector};
  end
  endfunction


  function  [3:0] conv_u2u_3_4 ;
    input [2:0]  vector ;
  begin
    conv_u2u_3_4 = {1'b0, vector};
  end
  endfunction


  function signed [8:0] conv_s2s_8_9 ;
    input signed [7:0]  vector ;
  begin
    conv_s2s_8_9 = {vector[7], vector};
  end
  endfunction


  function  [1:0] conv_s2u_1_2 ;
    input signed [0:0]  vector ;
  begin
    conv_s2u_1_2 = {vector[0], vector};
  end
  endfunction


  function  [5:0] conv_u2u_5_6 ;
    input [4:0]  vector ;
  begin
    conv_u2u_5_6 = {1'b0, vector};
  end
  endfunction


  function signed [6:0] conv_s2s_6_7 ;
    input signed [5:0]  vector ;
  begin
    conv_s2s_6_7 = {vector[5], vector};
  end
  endfunction


  function signed [6:0] conv_u2s_6_7 ;
    input [5:0]  vector ;
  begin
    conv_u2s_6_7 = {1'b0, vector};
  end
  endfunction


  function  [6:0] conv_s2u_14_7 ;
    input signed [13:0]  vector ;
  begin
    conv_s2u_14_7 = vector[6:0];
  end
  endfunction


  function signed [6:0] conv_u2s_2_7 ;
    input [1:0]  vector ;
  begin
    conv_u2s_2_7 = {{5{1'b0}}, vector};
  end
  endfunction


  function signed [6:0] conv_u2s_5_7 ;
    input [4:0]  vector ;
  begin
    conv_u2s_5_7 = {{2{1'b0}}, vector};
  end
  endfunction


  function  [4:0] conv_u2u_4_5 ;
    input [3:0]  vector ;
  begin
    conv_u2u_4_5 = {1'b0, vector};
  end
  endfunction


  function signed [6:0] conv_s2s_5_7 ;
    input signed [4:0]  vector ;
  begin
    conv_s2s_5_7 = {{2{vector[4]}}, vector};
  end
  endfunction


  function signed [4:0] conv_s2s_10_5 ;
    input signed [9:0]  vector ;
  begin
    conv_s2s_10_5 = vector[4:0];
  end
  endfunction


  function signed [4:0] conv_s2s_2_5 ;
    input signed [1:0]  vector ;
  begin
    conv_s2s_2_5 = {{3{vector[1]}}, vector};
  end
  endfunction


  function signed [1:0] conv_s2s_1_2 ;
    input signed [0:0]  vector ;
  begin
    conv_s2s_1_2 = {vector[0], vector};
  end
  endfunction


  function signed [1:0] conv_u2s_1_2 ;
    input [0:0]  vector ;
  begin
    conv_u2s_1_2 = {1'b0, vector};
  end
  endfunction


  function  [5:0] conv_u2u_4_6 ;
    input [3:0]  vector ;
  begin
    conv_u2u_4_6 = {{2{1'b0}}, vector};
  end
  endfunction


  function  [3:0] conv_s2u_2_4 ;
    input signed [1:0]  vector ;
  begin
    conv_s2u_2_4 = {{2{vector[1]}}, vector};
  end
  endfunction


  function  [4:0] conv_s2u_4_5 ;
    input signed [3:0]  vector ;
  begin
    conv_s2u_4_5 = {vector[3], vector};
  end
  endfunction


  function  [4:0] conv_u2u_3_5 ;
    input [2:0]  vector ;
  begin
    conv_u2u_3_5 = {{2{1'b0}}, vector};
  end
  endfunction


  function signed [5:0] conv_s2s_5_6 ;
    input signed [4:0]  vector ;
  begin
    conv_s2s_5_6 = {vector[4], vector};
  end
  endfunction


  function signed [5:0] conv_u2s_5_6 ;
    input [4:0]  vector ;
  begin
    conv_u2s_5_6 = {1'b0, vector};
  end
  endfunction


  function signed [14:0] conv_u2s_14_15 ;
    input [13:0]  vector ;
  begin
    conv_u2s_14_15 = {1'b0, vector};
  end
  endfunction


  function signed [7:0] conv_s2s_7_8 ;
    input signed [6:0]  vector ;
  begin
    conv_s2s_7_8 = {vector[6], vector};
  end
  endfunction


  function signed [6:0] conv_s2s_14_7 ;
    input signed [13:0]  vector ;
  begin
    conv_s2s_14_7 = vector[6:0];
  end
  endfunction


  function signed [6:0] conv_u2s_14_7 ;
    input [13:0]  vector ;
  begin
    conv_u2s_14_7 = vector[6:0];
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    reduce_by_5
//  Generated from file(s):
//    2) $PROJECT_HOME/reduce_by_5.cpp
// ------------------------------------------------------------------


module reduce_by_5 (
  vin_rsc_z, clk_reg_rsc_z, vout_rsc_z, clk, en, arst_n
);
  input [149:0] vin_rsc_z;
  output clk_reg_rsc_z;
  output vout_rsc_z;
  input clk;
  input en;
  input arst_n;


  // Interconnect Declarations
  wire [149:0] vin_rsc_mgc_in_wire_d;
  wire clk_reg_rsc_mgc_out_stdreg_d;
  wire vout_rsc_mgc_out_stdreg_d;


  // Interconnect Declarations for Component Instantiations 
  mgc_in_wire #(.rscid(1),
  .width(150)) vin_rsc_mgc_in_wire (
      .d(vin_rsc_mgc_in_wire_d),
      .z(vin_rsc_z)
    );
  mgc_out_stdreg #(.rscid(2),
  .width(1)) clk_reg_rsc_mgc_out_stdreg (
      .d(clk_reg_rsc_mgc_out_stdreg_d),
      .z(clk_reg_rsc_z)
    );
  mgc_out_stdreg #(.rscid(3),
  .width(1)) vout_rsc_mgc_out_stdreg (
      .d(vout_rsc_mgc_out_stdreg_d),
      .z(vout_rsc_z)
    );
  reduce_by_5_core reduce_by_5_core_inst (
      .clk(clk),
      .en(en),
      .arst_n(arst_n),
      .vin_rsc_mgc_in_wire_d(vin_rsc_mgc_in_wire_d),
      .clk_reg_rsc_mgc_out_stdreg_d(clk_reg_rsc_mgc_out_stdreg_d),
      .vout_rsc_mgc_out_stdreg_d(vout_rsc_mgc_out_stdreg_d)
    );
endmodule



