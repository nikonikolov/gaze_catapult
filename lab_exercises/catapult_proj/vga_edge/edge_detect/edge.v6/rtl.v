// ----------------------------------------------------------------------
//  HLS HDL:        Verilog Netlister
//  HLS Version:    2011a.126 Production Release
//  HLS Date:       Wed Aug  8 00:52:07 PDT 2012
// 
//  Generated by:   lb3314@EEWS104A-019
//  Generated date: Tue Mar 24 18:03:20 2015
// ----------------------------------------------------------------------

// 
// ------------------------------------------------------------------
//  Design Unit:    edge_core
// ------------------------------------------------------------------


module edge_core (
  clk, en, arst_n, vin_rsc_mgc_in_wire_d, vout_rsc_mgc_out_stdreg_d
);
  input clk;
  input en;
  input arst_n;
  input [89:0] vin_rsc_mgc_in_wire_d;
  output [29:0] vout_rsc_mgc_out_stdreg_d;


  // Interconnect Declarations
  reg [9:0] regs_regs_1_sg3_sva;
  reg [9:0] regs_regs_1_sg1_sva;
  reg [9:0] regs_regs_1_sg5_sva;
  reg [9:0] ACC1_asn_itm;
  reg [9:0] ACC1_asn_2_itm;
  reg [9:0] ACC1_asn_3_itm;
  reg [9:0] reg_vout_rsc_mgc_out_stdreg_d_tmp;
  wire [10:0] red_5_lpi_1_dfm_sg2;
  wire [11:0] ACC1_acc_12_sdt;
  wire [12:0] nl_ACC1_acc_12_sdt;
  wire [10:0] ACC1_acc_psp;
  wire [11:0] nl_ACC1_acc_psp;
  wire [11:0] ACC1_acc_8_sdt;
  wire [12:0] nl_ACC1_acc_8_sdt;


  // Interconnect Declarations for Component Instantiations 
  assign vout_rsc_mgc_out_stdreg_d = {reg_vout_rsc_mgc_out_stdreg_d_tmp , reg_vout_rsc_mgc_out_stdreg_d_tmp
      , reg_vout_rsc_mgc_out_stdreg_d_tmp};
  assign red_5_lpi_1_dfm_sg2 = ACC1_acc_psp & (signext_11_1(~ (ACC1_acc_psp[10])));
  assign nl_ACC1_acc_12_sdt = conv_u2u_11_12(conv_u2u_10_11(~ (vin_rsc_mgc_in_wire_d[59:50]))
      + conv_u2u_10_11(ACC1_asn_3_itm)) + conv_u2u_11_12(ACC1_acc_8_sdt[11:1]);
  assign ACC1_acc_12_sdt = nl_ACC1_acc_12_sdt[11:0];
  assign nl_ACC1_acc_psp = (ACC1_acc_12_sdt[11:1]) + 11'b10000000001;
  assign ACC1_acc_psp = nl_ACC1_acc_psp[10:0];
  assign nl_ACC1_acc_8_sdt = conv_u2u_11_12(conv_u2u_10_11(~ (vin_rsc_mgc_in_wire_d[29:20]))
      + conv_u2u_10_11(~ (vin_rsc_mgc_in_wire_d[89:80]))) + conv_u2u_11_12(conv_u2u_10_11(ACC1_asn_itm)
      + conv_u2u_10_11(ACC1_asn_2_itm));
  assign ACC1_acc_8_sdt = nl_ACC1_acc_8_sdt[11:0];
  always @(posedge clk or negedge arst_n) begin
    if ( ~ arst_n ) begin
      ACC1_asn_3_itm <= 10'b0;
      ACC1_asn_itm <= 10'b0;
      ACC1_asn_2_itm <= 10'b0;
      regs_regs_1_sg3_sva <= 10'b0;
      regs_regs_1_sg5_sva <= 10'b0;
      regs_regs_1_sg1_sva <= 10'b0;
      reg_vout_rsc_mgc_out_stdreg_d_tmp <= 10'b0;
    end
    else begin
      if ( en ) begin
        ACC1_asn_3_itm <= regs_regs_1_sg3_sva;
        ACC1_asn_itm <= regs_regs_1_sg1_sva;
        ACC1_asn_2_itm <= regs_regs_1_sg5_sva;
        regs_regs_1_sg3_sva <= vin_rsc_mgc_in_wire_d[59:50];
        regs_regs_1_sg5_sva <= vin_rsc_mgc_in_wire_d[89:80];
        regs_regs_1_sg1_sva <= vin_rsc_mgc_in_wire_d[29:20];
        reg_vout_rsc_mgc_out_stdreg_d_tmp <= ({(red_5_lpi_1_dfm_sg2[7:0]) , ((ACC1_acc_12_sdt[0])
            & (~ (ACC1_acc_psp[10]))) , ((ACC1_acc_8_sdt[0]) & (~ (ACC1_acc_psp[10])))})
            | (signext_10_1(readslicef_10_1_9((({1'b1 , (signext_9_3(~ (red_5_lpi_1_dfm_sg2[10:8])))})
            + 10'b1))));
      end
    end
  end

  function [10:0] signext_11_1;
    input [0:0] vector;
  begin
    signext_11_1= {{10{vector[0]}}, vector};
  end
  endfunction


  function [0:0] readslicef_10_1_9;
    input [9:0] vector;
    reg [9:0] tmp;
  begin
    tmp = vector >> 9;
    readslicef_10_1_9 = tmp[0:0];
  end
  endfunction


  function [8:0] signext_9_3;
    input [2:0] vector;
  begin
    signext_9_3= {{6{vector[2]}}, vector};
  end
  endfunction


  function [9:0] signext_10_1;
    input [0:0] vector;
  begin
    signext_10_1= {{9{vector[0]}}, vector};
  end
  endfunction


  function  [11:0] conv_u2u_11_12 ;
    input [10:0]  vector ;
  begin
    conv_u2u_11_12 = {1'b0, vector};
  end
  endfunction


  function  [10:0] conv_u2u_10_11 ;
    input [9:0]  vector ;
  begin
    conv_u2u_10_11 = {1'b0, vector};
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    edge_0
//  Generated from file(s):
//    4) $PROJECT_HOME/edge.c
// ------------------------------------------------------------------


module edge_0 (
  vin_rsc_z, vout_rsc_z, clk, en, arst_n
);
  input [89:0] vin_rsc_z;
  output [29:0] vout_rsc_z;
  input clk;
  input en;
  input arst_n;


  // Interconnect Declarations
  wire [89:0] vin_rsc_mgc_in_wire_d;
  wire [29:0] vout_rsc_mgc_out_stdreg_d;


  // Interconnect Declarations for Component Instantiations 
  mgc_in_wire #(.rscid(1),
  .width(90)) vin_rsc_mgc_in_wire (
      .d(vin_rsc_mgc_in_wire_d),
      .z(vin_rsc_z)
    );
  mgc_out_stdreg #(.rscid(2),
  .width(30)) vout_rsc_mgc_out_stdreg (
      .d(vout_rsc_mgc_out_stdreg_d),
      .z(vout_rsc_z)
    );
  edge_core edge_core_inst (
      .clk(clk),
      .en(en),
      .arst_n(arst_n),
      .vin_rsc_mgc_in_wire_d(vin_rsc_mgc_in_wire_d),
      .vout_rsc_mgc_out_stdreg_d(vout_rsc_mgc_out_stdreg_d)
    );
endmodule



