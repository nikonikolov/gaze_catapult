// ----------------------------------------------------------------------
//  HLS HDL:        Verilog Netlister
//  HLS Version:    2011a.126 Production Release
//  HLS Date:       Wed Aug  8 00:52:07 PDT 2012
// 
//  Generated by:   lb3314@EEWS104A-019
//  Generated date: Tue Mar 24 18:46:55 2015
// ----------------------------------------------------------------------

// 
// ------------------------------------------------------------------
//  Design Unit:    edge_core
// ------------------------------------------------------------------


module edge_core (
  clk, en, arst_n, vin_rsc_mgc_in_wire_d, vout_rsc_mgc_out_stdreg_d
);
  input clk;
  input en;
  input arst_n;
  input [89:0] vin_rsc_mgc_in_wire_d;
  output [29:0] vout_rsc_mgc_out_stdreg_d;


  // Interconnect Declarations
  reg [9:0] regs_regs_1_sg1_sva;
  reg [9:0] ACC2_asn_itm;
  reg [7:0] reg_vout_rsc_mgc_out_stdreg_d_tmp;
  reg reg_vout_rsc_mgc_out_stdreg_d_3_cse;
  wire [10:0] red_4_sg1_lpi_1_dfm;
  wire [9:0] FRAME_if_1_acc_itm;
  wire [10:0] nl_FRAME_if_1_acc_itm;
  wire [11:0] ACC2_acc_5_itm;
  wire [12:0] nl_ACC2_acc_5_itm;


  // Interconnect Declarations for Component Instantiations 
  assign vout_rsc_mgc_out_stdreg_d = {reg_vout_rsc_mgc_out_stdreg_d_tmp , ({{1{reg_vout_rsc_mgc_out_stdreg_d_3_cse}},
      reg_vout_rsc_mgc_out_stdreg_d_3_cse}) , reg_vout_rsc_mgc_out_stdreg_d_tmp ,
      ({{1{reg_vout_rsc_mgc_out_stdreg_d_3_cse}}, reg_vout_rsc_mgc_out_stdreg_d_3_cse})
      , reg_vout_rsc_mgc_out_stdreg_d_tmp , ({{1{reg_vout_rsc_mgc_out_stdreg_d_3_cse}},
      reg_vout_rsc_mgc_out_stdreg_d_3_cse})};
  assign nl_FRAME_if_1_acc_itm = ({1'b1 , (signext_9_3(~ (red_4_sg1_lpi_1_dfm[10:8])))})
      + 10'b1;
  assign FRAME_if_1_acc_itm = nl_FRAME_if_1_acc_itm[9:0];
  assign red_4_sg1_lpi_1_dfm = (ACC2_acc_5_itm[11:1]) & (signext_11_1(~ (ACC2_acc_5_itm[11])));
  assign nl_ACC2_acc_5_itm = ({1'b1 , (~ (vin_rsc_mgc_in_wire_d[29:20])) , 1'b1})
      + conv_u2s_11_12({ACC2_asn_itm , 1'b1});
  assign ACC2_acc_5_itm = nl_ACC2_acc_5_itm[11:0];
  always @(posedge clk or negedge arst_n) begin
    if ( ~ arst_n ) begin
      reg_vout_rsc_mgc_out_stdreg_d_3_cse <= 1'b0;
      ACC2_asn_itm <= 10'b0;
      regs_regs_1_sg1_sva <= 10'b0;
      reg_vout_rsc_mgc_out_stdreg_d_tmp <= 8'b0;
    end
    else begin
      if ( en ) begin
        reg_vout_rsc_mgc_out_stdreg_d_3_cse <= FRAME_if_1_acc_itm[9];
        ACC2_asn_itm <= regs_regs_1_sg1_sva;
        regs_regs_1_sg1_sva <= vin_rsc_mgc_in_wire_d[29:20];
        reg_vout_rsc_mgc_out_stdreg_d_tmp <= (red_4_sg1_lpi_1_dfm[7:0]) | (signext_8_1(FRAME_if_1_acc_itm[9]));
      end
    end
  end

  function [8:0] signext_9_3;
    input [2:0] vector;
  begin
    signext_9_3= {{6{vector[2]}}, vector};
  end
  endfunction


  function [10:0] signext_11_1;
    input [0:0] vector;
  begin
    signext_11_1= {{10{vector[0]}}, vector};
  end
  endfunction


  function [7:0] signext_8_1;
    input [0:0] vector;
  begin
    signext_8_1= {{7{vector[0]}}, vector};
  end
  endfunction


  function signed [11:0] conv_u2s_11_12 ;
    input [10:0]  vector ;
  begin
    conv_u2s_11_12 = {1'b0, vector};
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    edge_0
//  Generated from file(s):
//    4) $PROJECT_HOME/edge.c
// ------------------------------------------------------------------


module edge_0 (
  vin_rsc_z, vout_rsc_z, clk, en, arst_n
);
  input [89:0] vin_rsc_z;
  output [29:0] vout_rsc_z;
  input clk;
  input en;
  input arst_n;


  // Interconnect Declarations
  wire [89:0] vin_rsc_mgc_in_wire_d;
  wire [29:0] vout_rsc_mgc_out_stdreg_d;


  // Interconnect Declarations for Component Instantiations 
  mgc_in_wire #(.rscid(1),
  .width(90)) vin_rsc_mgc_in_wire (
      .d(vin_rsc_mgc_in_wire_d),
      .z(vin_rsc_z)
    );
  mgc_out_stdreg #(.rscid(2),
  .width(30)) vout_rsc_mgc_out_stdreg (
      .d(vout_rsc_mgc_out_stdreg_d),
      .z(vout_rsc_z)
    );
  edge_core edge_core_inst (
      .clk(clk),
      .en(en),
      .arst_n(arst_n),
      .vin_rsc_mgc_in_wire_d(vin_rsc_mgc_in_wire_d),
      .vout_rsc_mgc_out_stdreg_d(vout_rsc_mgc_out_stdreg_d)
    );
endmodule



